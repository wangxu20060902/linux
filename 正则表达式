正则是一串有规律的字符串
grep 使用
[
grep [-cinvABC] 'word' filename
-c  行数
-i 不区分大小写
-n 显示行号
-v 取反
-r 遍历所有子目录
-A 后面跟数字，过滤出符合要求的行以及下面n行
-B 同上，过滤出符合要求的行以及上面n行
-C 同上，同时过滤出符合要求的行以及上下各行
. 表是任意字符; * 表是零个或多个*号前面的字符; .*表是通配所有匹配; []表是一个范围; + 表示一个或多个+前面的字符 ;？表示零个或者一个？前面的字符;
]
sed 使用
[
sed 具有grep 字符串查找功能
sed '/root/'p /tmp/passwd   和grep 'root' /tmp/passwd 具有相同的效果只是没有颜色显示
sed -n '2'p /tmp/passwd  打印passwd文件的第二行 sed 可以打印指定的行 sed -n '1,$' /tmp/passwd 打印passwd的所有行
sed -e '1'p /tmp/passwd -e '/root/'p -n /tmp/passwd  这个同时执行多个匹配会打印出第一行并匹配打印出所有root行
sed '1'd /tmp/passwd  删除passwd文件中的第一行 不是实际删除文件中的内容只是显示时过滤 sed -i '1'd /tmp/passwd  -i 这个参数才真正更改文档中的内容
sed '1,10s/root/toor/g' /tmp/passwd  替换参数s  1,10指定范围 /root/toor/g 把root替换成toor g表示全局替换
]
awk 使用
[
awk 分段匹配
awk -F ':' '{print $1,$2}' /tmp/passwd  -F 指定分隔符 print打印 $0 表示所有字段 不指定-F表示默认以空格分隔
awk -F ':' '{print $1"#"$2"#"$3}' /tmp/passwd  打印结果显示分隔符以#号分隔  默认以空格分隔
awk -F ':' '$1 ~ /oo/' /tmp/passwd  这个意思是匹配出第一段有oo的 内容
awk -F ':' '/root/{print $1,$3} /ftp/ {print $1,$3}' /tmp/passwd
]
